---
version: '3.9'

services:
  mongodb:
    image: mongo:5.0
    tty: true
    container_name: db-mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
    env_file:
      - Docker/config/db-mongo.conf
    networks:
      - main

  postgres:
    image: postgres:13
    container_name: db-postgres
    restart: always
    env_file: Docker/config/db-postgres.conf
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data


  cerebro:
    image: lmenezes/cerebro:0.8.1
    container_name: cerebro
    restart: always
    ports:
      - "9000:9000"
    networks:
      - main

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    expose:
      - 9200
    networks:
      - main

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.4.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - main
    
  #app:
  #  restart: always
  #  container_name: backend-app
  #  build:
  #    context: .
  #    dockerfile: Dockerfile
  #  env_file:
  #    - Docker/config/db-mongo.conf
  #  ports:
  #    - 8080:8080
  #  networks:
  #    - main
  #  depends_on:
  #    - postgres
  #    - mongodb
  #  command: mvn spring-boot:run

networks:
  main:
    driver: bridge

volumes:
  mongo-data:
  postgres_data:
  elasticsearch-data:
